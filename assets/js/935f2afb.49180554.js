"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"manualSidebar":[{"type":"link","label":"Introduction","href":"/docs/","docId":"index"},{"type":"category","label":"About Buck2","items":[{"type":"link","label":"Why Buck2","href":"/docs/why","docId":"why"},{"type":"link","label":"Getting Started","href":"/docs/getting_started","docId":"getting_started"},{"type":"category","label":"Benefits","items":[{"type":"link","label":"Benefits When Compared to Buck1","href":"/docs/benefits","docId":"benefits"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Bootstrapping Buck2","href":"/docs/bootstrapping","docId":"bootstrapping"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Concepts","items":[{"type":"link","label":"Concept Map","href":"/docs/concepts/concept_map","docId":"concepts/concept_map"},{"type":"link","label":"Target Pattern","href":"/docs/concepts/target_pattern","docId":"concepts/target_pattern"},{"type":"link","label":"Visibility","href":"/docs/concepts/visibility","docId":"concepts/visibility"},{"type":"link","label":"Daemon (buckd)","href":"/docs/concepts/daemon","docId":"concepts/daemon"},{"type":"link","label":".buckconfig","href":"/docs/concepts/buckconfig","docId":"concepts/buckconfig"},{"type":"link","label":"Configurations","href":"/docs/concepts/configurations","docId":"concepts/configurations"},{"type":"link","label":"Glossary of Terms","href":"/docs/concepts/glossary","docId":"concepts/glossary"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Buck2 Users","items":[{"type":"category","label":"Commands","items":[{"type":"link","label":"Commands","href":"/docs/users/commands","docId":"users/commands"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Troubleshooting","items":[{"type":"link","label":"Common Issues","href":"/docs/users/faq/common_issues","docId":"users/faq/common_issues"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Build Observability","items":[{"type":"link","label":"Buck2 Interactive Console","href":"/docs/users/build_observability/interactive_console","docId":"users/build_observability/interactive_console"},{"type":"link","label":"Logging","href":"/docs/users/build_observability/logging","docId":"users/build_observability/logging"},{"type":"link","label":"Build Report","href":"/docs/users/build_observability/build_report","docId":"users/build_observability/build_report"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Remote Execution","href":"/docs/users/remote_execution","docId":"users/remote_execution"},{"type":"category","label":"Advanced Features","items":[{"type":"link","label":"Deferred Materialization","href":"/docs/users/advanced/deferred_materialization","docId":"users/advanced/deferred_materialization"},{"type":"link","label":"Restarter","href":"/docs/users/advanced/restarter","docId":"users/advanced/restarter"},{"type":"link","label":"In Memory Cache","href":"/docs/users/advanced/in_memory_cache","docId":"users/advanced/in_memory_cache"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Rule Authors","items":[{"type":"link","label":"Writing Rules","href":"/docs/rule_authors/writing_rules","docId":"rule_authors/writing_rules"},{"type":"link","label":"Transitive Sets","href":"/docs/rule_authors/transitive_sets","docId":"rule_authors/transitive_sets"},{"type":"link","label":"Configurations","href":"/docs/rule_authors/configurations","docId":"rule_authors/configurations"},{"type":"link","label":"Configuration Transitions","href":"/docs/rule_authors/configuration_transitions","docId":"rule_authors/configuration_transitions"},{"type":"link","label":"Dynamic Dependencies","href":"/docs/rule_authors/dynamic_dependencies","docId":"rule_authors/dynamic_dependencies"},{"type":"link","label":"Anonymous Targets","href":"/docs/rule_authors/anon_targets","docId":"rule_authors/anon_targets"},{"type":"link","label":"Test Execution","href":"/docs/rule_authors/test_execution","docId":"rule_authors/test_execution"},{"type":"link","label":"Optimization","href":"/docs/rule_authors/optimization","docId":"rule_authors/optimization"},{"type":"link","label":"Incremental Actions","href":"/docs/rule_authors/incremental_actions","docId":"rule_authors/incremental_actions"},{"type":"link","label":"Alias","href":"/docs/rule_authors/alias","docId":"rule_authors/alias"},{"type":"link","label":"Local Resources For Tests Execution","href":"/docs/rule_authors/local_resources","docId":"rule_authors/local_resources"},{"type":"link","label":"Dep Files","href":"/docs/rule_authors/dep_files","docId":"rule_authors/dep_files"}],"collapsed":true,"collapsible":true},{"type":"category","label":"BXL Developers","items":[{"type":"category","label":"About BXL","items":[{"type":"link","label":"Why BXL","href":"/docs/developers/bxl","docId":"developers/bxl"}],"collapsed":true,"collapsible":true},{"type":"category","label":"User Guide","items":[{"type":"link","label":"Getting Started","href":"/docs/developers/bxl_getting_started","docId":"developers/bxl_getting_started"},{"type":"link","label":"Common How-Tos","href":"/docs/developers/bxl_how_tos","docId":"developers/bxl_how_tos"},{"type":"link","label":"Target Universe in BXL","href":"/docs/developers/target_universe","docId":"developers/target_universe"},{"type":"link","label":"BXL Telemetry","href":"/docs/developers/bxl_telemetry","docId":"developers/bxl_telemetry"},{"type":"link","label":"BXL and Anonymous Targets","href":"/docs/developers/anon_targets","docId":"developers/anon_targets"},{"type":"link","label":"BXL and Dynamic Outputs","href":"/docs/developers/dynamic_output","docId":"developers/dynamic_output"}],"collapsed":true,"collapsible":true},{"type":"link","label":"FAQs","href":"/docs/developers/bxl_faqs","docId":"developers/bxl_faqs"},{"type":"category","label":"BXL APIs","items":[{"type":"link","label":"action type","href":"/docs/api/bxl/action","docId":"api/bxl/action"},{"type":"link","label":"action_attr type","href":"/docs/api/bxl/action_attr","docId":"api/bxl/action_attr"},{"type":"link","label":"action_query_node type","href":"/docs/api/bxl/action_query_node","docId":"api/bxl/action_query_node"},{"type":"link","label":"analysis_result type","href":"/docs/api/bxl/analysis_result","docId":"api/bxl/analysis_result"},{"type":"link","label":"aqueryctx type","href":"/docs/api/bxl/aqueryctx","docId":"api/bxl/aqueryctx"},{"type":"link","label":"audit_ctx type","href":"/docs/api/bxl/audit_ctx","docId":"api/bxl/audit_ctx"},{"type":"link","label":"bxl_actions type","href":"/docs/api/bxl/bxl_actions","docId":"api/bxl/bxl_actions"},{"type":"link","label":"bxl_build_result type","href":"/docs/api/bxl/bxl_build_result","docId":"api/bxl/bxl_build_result"},{"type":"link","label":"bxl_ctx type","href":"/docs/api/bxl/bxl_ctx","docId":"api/bxl/bxl_ctx"},{"type":"link","label":"bxl_output_stream type","href":"/docs/api/bxl/bxl_output_stream","docId":"api/bxl/bxl_output_stream"},{"type":"link","label":"coerced_attr type","href":"/docs/api/bxl/coerced_attr","docId":"api/bxl/coerced_attr"},{"type":"link","label":"configured_attr type","href":"/docs/api/bxl/configured_attr","docId":"api/bxl/configured_attr"},{"type":"link","label":"cqueryctx type","href":"/docs/api/bxl/cqueryctx","docId":"api/bxl/cqueryctx"},{"type":"link","label":"ensured_artifact type","href":"/docs/api/bxl/ensured_artifact","docId":"api/bxl/ensured_artifact"},{"type":"link","label":"ensured_artifact_group type","href":"/docs/api/bxl/ensured_artifact_group","docId":"api/bxl/ensured_artifact_group"},{"type":"link","label":"fs type","href":"/docs/api/bxl/fs","docId":"api/bxl/fs"},{"type":"link","label":"get_path_without_materialization type","href":"/docs/api/bxl/get_path_without_materialization","docId":"api/bxl/get_path_without_materialization"},{"type":"link","label":"get_paths_without_materialization type","href":"/docs/api/bxl/get_paths_without_materialization","docId":"api/bxl/get_paths_without_materialization"},{"type":"link","label":"instant type","href":"/docs/api/bxl/instant","docId":"api/bxl/instant"},{"type":"link","label":"lazy_attrs type","href":"/docs/api/bxl/lazy_attrs","docId":"api/bxl/lazy_attrs"},{"type":"link","label":"lazy_resolved_attrs type","href":"/docs/api/bxl/lazy_resolved_attrs","docId":"api/bxl/lazy_resolved_attrs"},{"type":"link","label":"target_node type","href":"/docs/api/bxl/target_node","docId":"api/bxl/target_node"},{"type":"link","label":"target_universe type","href":"/docs/api/bxl/target_universe","docId":"api/bxl/target_universe"},{"type":"link","label":"unconfigured_target_node type","href":"/docs/api/bxl/unconfigured_target_node","docId":"api/bxl/unconfigured_target_node"},{"type":"link","label":"uqueryctx type","href":"/docs/api/bxl/uqueryctx","docId":"api/bxl/uqueryctx"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Buck2 Developers","items":[{"type":"category","label":"Architecture","items":[{"type":"link","label":"Architectural Model","href":"/docs/developers/architecture/buck2","docId":"developers/architecture/buck2"},{"type":"link","label":"Buck1 vs Buck2","href":"/docs/developers/architecture/buck1_vs_buck2","docId":"developers/architecture/buck1_vs_buck2"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Parity Testing","href":"/docs/developers/parity_script","docId":"developers/parity_script"},{"type":"link","label":"Finding Commands That Buck2 Ran","href":"/docs/developers/what-ran","docId":"developers/what-ran"},{"type":"category","label":"Starlark Language","items":[{"type":"link","label":"Environments","href":"/docs/developers/starlark/environment","docId":"developers/starlark/environment"},{"type":"link","label":"A Moving Garbage Collector","href":"/docs/developers/starlark/gc","docId":"developers/starlark/gc"},{"type":"link","label":"Heaps and Heap References","href":"/docs/developers/starlark/heaps","docId":"developers/starlark/heaps"},{"type":"link","label":"Starlark Language Specification","href":"/docs/developers/starlark/spec","docId":"developers/starlark/spec"},{"type":"link","label":"Starlark Types","href":"/docs/developers/starlark/types","docId":"developers/starlark/types"},{"type":"link","label":"Value Representation","href":"/docs/developers/starlark/values","docId":"developers/starlark/values"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Request for Comments","href":"/docs/developers/request_for_comments","docId":"developers/request_for_comments"},{"type":"link","label":"Windows Cheat Sheet","href":"/docs/developers/windows_cheat_sheet","docId":"developers/windows_cheat_sheet"}],"collapsed":true,"collapsible":true},{"type":"category","label":"API","items":[{"type":"link","label":"Rules","href":"/docs/api/rules","docId":"api/rules"},{"type":"category","label":"Starlark APIs","items":[{"type":"link","label":"globals","href":"/docs/api/starlark/globals","docId":"api/starlark/globals"},{"type":"link","label":"dict type","href":"/docs/api/starlark/dict","docId":"api/starlark/dict"},{"type":"link","label":"list type","href":"/docs/api/starlark/list","docId":"api/starlark/list"},{"type":"link","label":"string type","href":"/docs/api/starlark/string","docId":"api/starlark/string"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Build APIs","items":[{"type":"link","label":"globals","href":"/docs/api/build/globals","docId":"api/build/globals"},{"type":"link","label":"actions type","href":"/docs/api/build/actions","docId":"api/build/actions"},{"type":"link","label":"anon_target type","href":"/docs/api/build/anon_target","docId":"api/build/anon_target"},{"type":"link","label":"anon_targets type","href":"/docs/api/build/anon_targets","docId":"api/build/anon_targets"},{"type":"link","label":"artifact type","href":"/docs/api/build/artifact","docId":"api/build/artifact"},{"type":"link","label":"attrs type","href":"/docs/api/build/attrs","docId":"api/build/attrs"},{"type":"link","label":"buck_regex type","href":"/docs/api/build/buck_regex","docId":"api/build/buck_regex"},{"type":"link","label":"cmd_args type","href":"/docs/api/build/cmd_args","docId":"api/build/cmd_args"},{"type":"link","label":"configured_target_label type","href":"/docs/api/build/configured_target_label","docId":"api/build/configured_target_label"},{"type":"link","label":"context type","href":"/docs/api/build/context","docId":"api/build/context"},{"type":"link","label":"dependency type","href":"/docs/api/build/dependency","docId":"api/build/dependency"},{"type":"link","label":"digest_config type","href":"/docs/api/build/digest_config","docId":"api/build/digest_config"},{"type":"link","label":"label type","href":"/docs/api/build/label","docId":"api/build/label"},{"type":"link","label":"label_relative_path type","href":"/docs/api/build/label_relative_path","docId":"api/build/label_relative_path"},{"type":"link","label":"plugins type","href":"/docs/api/build/plugins","docId":"api/build/plugins"},{"type":"link","label":"promise type","href":"/docs/api/build/promise","docId":"api/build/promise"},{"type":"link","label":"provider_collection type","href":"/docs/api/build/provider_collection","docId":"api/build/provider_collection"},{"type":"link","label":"providers_label type","href":"/docs/api/build/providers_label","docId":"api/build/providers_label"},{"type":"link","label":"target_label type","href":"/docs/api/build/target_label","docId":"api/build/target_label"}],"collapsed":true,"collapsible":true},{"type":"category","label":"BXL APIs","items":[{"type":"link","label":"action type","href":"/docs/api/bxl/action","docId":"api/bxl/action"},{"type":"link","label":"action_attr type","href":"/docs/api/bxl/action_attr","docId":"api/bxl/action_attr"},{"type":"link","label":"action_query_node type","href":"/docs/api/bxl/action_query_node","docId":"api/bxl/action_query_node"},{"type":"link","label":"analysis_result type","href":"/docs/api/bxl/analysis_result","docId":"api/bxl/analysis_result"},{"type":"link","label":"aqueryctx type","href":"/docs/api/bxl/aqueryctx","docId":"api/bxl/aqueryctx"},{"type":"link","label":"audit_ctx type","href":"/docs/api/bxl/audit_ctx","docId":"api/bxl/audit_ctx"},{"type":"link","label":"bxl_actions type","href":"/docs/api/bxl/bxl_actions","docId":"api/bxl/bxl_actions"},{"type":"link","label":"bxl_build_result type","href":"/docs/api/bxl/bxl_build_result","docId":"api/bxl/bxl_build_result"},{"type":"link","label":"bxl_ctx type","href":"/docs/api/bxl/bxl_ctx","docId":"api/bxl/bxl_ctx"},{"type":"link","label":"bxl_output_stream type","href":"/docs/api/bxl/bxl_output_stream","docId":"api/bxl/bxl_output_stream"},{"type":"link","label":"coerced_attr type","href":"/docs/api/bxl/coerced_attr","docId":"api/bxl/coerced_attr"},{"type":"link","label":"configured_attr type","href":"/docs/api/bxl/configured_attr","docId":"api/bxl/configured_attr"},{"type":"link","label":"cqueryctx type","href":"/docs/api/bxl/cqueryctx","docId":"api/bxl/cqueryctx"},{"type":"link","label":"ensured_artifact type","href":"/docs/api/bxl/ensured_artifact","docId":"api/bxl/ensured_artifact"},{"type":"link","label":"ensured_artifact_group type","href":"/docs/api/bxl/ensured_artifact_group","docId":"api/bxl/ensured_artifact_group"},{"type":"link","label":"fs type","href":"/docs/api/bxl/fs","docId":"api/bxl/fs"},{"type":"link","label":"get_path_without_materialization type","href":"/docs/api/bxl/get_path_without_materialization","docId":"api/bxl/get_path_without_materialization"},{"type":"link","label":"get_paths_without_materialization type","href":"/docs/api/bxl/get_paths_without_materialization","docId":"api/bxl/get_paths_without_materialization"},{"type":"link","label":"instant type","href":"/docs/api/bxl/instant","docId":"api/bxl/instant"},{"type":"link","label":"lazy_attrs type","href":"/docs/api/bxl/lazy_attrs","docId":"api/bxl/lazy_attrs"},{"type":"link","label":"lazy_resolved_attrs type","href":"/docs/api/bxl/lazy_resolved_attrs","docId":"api/bxl/lazy_resolved_attrs"},{"type":"link","label":"target_node type","href":"/docs/api/bxl/target_node","docId":"api/bxl/target_node"},{"type":"link","label":"target_universe type","href":"/docs/api/bxl/target_universe","docId":"api/bxl/target_universe"},{"type":"link","label":"unconfigured_target_node type","href":"/docs/api/bxl/unconfigured_target_node","docId":"api/bxl/unconfigured_target_node"},{"type":"link","label":"uqueryctx type","href":"/docs/api/bxl/uqueryctx","docId":"api/bxl/uqueryctx"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true,"href":"/docs/api"}]},"docs":{"api":{"id":"api","title":"APIs","description":"A lot of Buck2 is driven by Starlark APIs. While there is a","sidebar":"manualSidebar"},"api/build/actions":{"id":"api/build/actions","title":"actions type","description":"actions.anon\\\\_target","sidebar":"manualSidebar"},"api/build/anon_target":{"id":"api/build/anon_target","title":"anon_target type","description":"Accessors to the promise of the anon rule and the promised artifacts associated with the rule.","sidebar":"manualSidebar"},"api/build/anon_targets":{"id":"api/build/anon_targets","title":"anon_targets type","description":"Accessors to the all the anon targets created, as well as the joined promise of these targets.","sidebar":"manualSidebar"},"api/build/artifact":{"id":"api/build/artifact","title":"artifact type","description":"A single input or output file for an action.","sidebar":"manualSidebar"},"api/build/attrs":{"id":"api/build/attrs","title":"attrs type","description":"This type is available as a global attrs symbol, to allow the definition of attributes to the rule function.","sidebar":"manualSidebar"},"api/build/buck_regex":{"id":"api/build/buck_regex","title":"buck_regex type","description":"buck\\\\_regex.match","sidebar":"manualSidebar"},"api/build/cmd_args":{"id":"api/build/cmd_args","title":"cmd_args type","description":"The cmdargs type is created by cmdargs() and is consumed by ctx.actions.run. The type is a mutable collection of strings and artifact values. In general, command lines, artifacts, strings, RunInfo and lists thereof can be added to or used to construct a cmd_args value. All these methods operate mutably on cmd and return that value too.","sidebar":"manualSidebar"},"api/build/configured_target_label":{"id":"api/build/configured_target_label","title":"configured_target_label type","description":"configured\\\\target\\\\label.cell","sidebar":"manualSidebar"},"api/build/context":{"id":"api/build/context","title":"context type","description":"The type used for defining rules, usually bound as ctx. Usually the sole argument to the impl argument of the rule function.","sidebar":"manualSidebar"},"api/build/dependency":{"id":"api/build/dependency","title":"dependency type","description":"Dependency type. In Starlark typing it can be represented with Dependency global.","sidebar":"manualSidebar"},"api/build/digest_config":{"id":"api/build/digest_config","title":"digest_config type","description":"digest\\\\config.allows\\\\blake3","sidebar":"manualSidebar"},"api/build/globals":{"id":"api/build/globals","title":"globals","description":"AnalysisActions","sidebar":"manualSidebar"},"api/build/label":{"id":"api/build/label","title":"label type","description":"A label is used to represent a configured target.","sidebar":"manualSidebar"},"api/build/label_relative_path":{"id":"api/build/label_relative_path","title":"label_relative_path type","description":"label\\\\relative\\\\path.add","sidebar":"manualSidebar"},"api/build/plugins":{"id":"api/build/plugins","title":"plugins type","description":"plugins.All","sidebar":"manualSidebar"},"api/build/promise":{"id":"api/build/promise","title":"promise type","description":"promise.join","sidebar":"manualSidebar"},"api/build/provider_collection":{"id":"api/build/provider_collection","title":"provider_collection type","description":"Holds a collection of UserProviders. These can be accessed in Starlark by indexing on a ProviderCallable object.","sidebar":"manualSidebar"},"api/build/providers_label":{"id":"api/build/providers_label","title":"providers_label type","description":"providers\\\\_label.cell","sidebar":"manualSidebar"},"api/build/target_label":{"id":"api/build/target_label","title":"target_label type","description":"target\\\\_label.cell","sidebar":"manualSidebar"},"api/bxl/action":{"id":"api/bxl/action","title":"action type","description":"Methods for an action.","sidebar":"manualSidebar"},"api/bxl/action_attr":{"id":"api/bxl/action_attr","title":"action_attr type","description":"Methods on action query node\'s attributes.","sidebar":"manualSidebar"},"api/bxl/action_query_node":{"id":"api/bxl/action_query_node","title":"action_query_node type","description":"Methods for action query node.","sidebar":"manualSidebar"},"api/bxl/analysis_result":{"id":"api/bxl/analysis_result","title":"analysis_result type","description":"The result of running an analysis in bxl.","sidebar":"manualSidebar"},"api/bxl/aqueryctx":{"id":"api/bxl/aqueryctx","title":"aqueryctx type","description":"The context for performing aquery operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within aquery command.","sidebar":"manualSidebar"},"api/bxl/audit_ctx":{"id":"api/bxl/audit_ctx","title":"audit_ctx type","description":"The context for performing audit operations in bxl. The functions offered on this ctx are the same behaviour as the audit functions available within audit command.","sidebar":"manualSidebar"},"api/bxl/bxl_actions":{"id":"api/bxl/bxl_actions","title":"bxl_actions type","description":"The bxl action context is the context for creating actions. This context is obtained after performing execution platform resolution based on a set of given dependencies and toolchains.","sidebar":"manualSidebar"},"api/bxl/bxl_build_result":{"id":"api/bxl/bxl_build_result","title":"bxl_build_result type","description":"The result of building in bxl.","sidebar":"manualSidebar"},"api/bxl/bxl_ctx":{"id":"api/bxl/bxl_ctx","title":"bxl_ctx type","description":"The bxl context that the top level bxl implementation receives as parameter. This context contains all the core bxl functions to query, build, create actions, etc.","sidebar":"manualSidebar"},"api/bxl/bxl_output_stream":{"id":"api/bxl/bxl_output_stream","title":"bxl_output_stream type","description":"The output stream for bxl to print values to the console as their result","sidebar":"manualSidebar"},"api/bxl/coerced_attr":{"id":"api/bxl/coerced_attr","title":"coerced_attr type","description":"Methods on configured target node\'s attributes.","sidebar":"manualSidebar"},"api/bxl/configured_attr":{"id":"api/bxl/configured_attr","title":"configured_attr type","description":"Methods on configured target node\'s attributes.","sidebar":"manualSidebar"},"api/bxl/cqueryctx":{"id":"api/bxl/cqueryctx","title":"cqueryctx type","description":"The context for performing cquery operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within cquery command.","sidebar":"manualSidebar"},"api/bxl/ensured_artifact":{"id":"api/bxl/ensured_artifact","title":"ensured_artifact type","description":"An artifact that will be materialized to buck-out at the end of the bxl invocation. These artifacts can be printed to bxl\'s results. Doing so will print the path of the artifact rather than the standard representation.","sidebar":"manualSidebar"},"api/bxl/ensured_artifact_group":{"id":"api/bxl/ensured_artifact_group","title":"ensured_artifact_group type","description":"An artifact group that will be materialized to buck-out at the end of the bxl invocation. These artifacts can be printed to bxl\'s results. Doing so will print the path of each artifact in the group rather than the standard representation.","sidebar":"manualSidebar"},"api/bxl/fs":{"id":"api/bxl/fs","title":"fs type","description":"Provides some basic tracked filesystem access for bxl functions so that they can meaningfully detect simple properties of artifacts, and source directories.","sidebar":"manualSidebar"},"api/bxl/get_path_without_materialization":{"id":"api/bxl/get_path_without_materialization","title":"get_path_without_materialization type","description":"get\\\\path\\\\without\\\\materialization.get\\\\path\\\\without\\\\materialization","sidebar":"manualSidebar"},"api/bxl/get_paths_without_materialization":{"id":"api/bxl/get_paths_without_materialization","title":"get_paths_without_materialization type","description":"get\\\\paths\\\\without\\\\materialization.get\\\\paths\\\\without\\\\materialization","sidebar":"manualSidebar"},"api/bxl/instant":{"id":"api/bxl/instant","title":"instant type","description":"Instant methods, to aid in debugging/timing individual pieces of the bxl script.","sidebar":"manualSidebar"},"api/bxl/lazy_attrs":{"id":"api/bxl/lazy_attrs","title":"lazy_attrs type","description":"The context for getting attrs lazily on a StarlarkConfiguredTargetNode.","sidebar":"manualSidebar"},"api/bxl/lazy_resolved_attrs":{"id":"api/bxl/lazy_resolved_attrs","title":"lazy_resolved_attrs type","description":"The context for getting resolved attrs lazily on a StarlarkConfiguredTargetNode.","sidebar":"manualSidebar"},"api/bxl/target_node":{"id":"api/bxl/target_node","title":"target_node type","description":"target\\\\node.attrs\\\\eager","sidebar":"manualSidebar"},"api/bxl/target_universe":{"id":"api/bxl/target_universe","title":"target_universe type","description":"Target universe in BXL. Used for looking up valid configured targets to use in cquery. This is not needed for uquery.","sidebar":"manualSidebar"},"api/bxl/unconfigured_target_node":{"id":"api/bxl/unconfigured_target_node","title":"unconfigured_target_node type","description":"Methods for unconfigured target node.","sidebar":"manualSidebar"},"api/bxl/uqueryctx":{"id":"api/bxl/uqueryctx","title":"uqueryctx type","description":"The context for performing uquery operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within uquery command.","sidebar":"manualSidebar"},"api/rules":{"id":"api/rules","title":"Rules","description":"These rules are available as standard in Buck2.","sidebar":"manualSidebar"},"api/starlark/dict":{"id":"api/starlark/dict","title":"dict type","description":"dict.clear","sidebar":"manualSidebar"},"api/starlark/globals":{"id":"api/starlark/globals","title":"globals","description":"False","sidebar":"manualSidebar"},"api/starlark/list":{"id":"api/starlark/list","title":"list type","description":"list.append","sidebar":"manualSidebar"},"api/starlark/string":{"id":"api/starlark/string","title":"string type","description":"string.capitalize","sidebar":"manualSidebar"},"benefits":{"id":"benefits","title":"Benefits When Compared to Buck1","description":"For reports from real users, see the Testimonials, which","sidebar":"manualSidebar"},"bootstrapping":{"id":"bootstrapping","title":"Bootstrapping Buck2","description":"To generate BUCK files for buck2\'s dependencies, we use","sidebar":"manualSidebar"},"concepts/buckconfig":{"id":"concepts/buckconfig","title":".buckconfig","description":"The root of your project must contain a configuration","sidebar":"manualSidebar"},"concepts/concept_map":{"id":"concepts/concept_map","title":"Concept Map","description":"The Concept Map provides an at-a-glance overview of the relationships between","sidebar":"manualSidebar"},"concepts/configurations":{"id":"concepts/configurations","title":"Configurations","description":"When building a target, buck always builds it in a particular \\"configuration.\\"","sidebar":"manualSidebar"},"concepts/daemon":{"id":"concepts/daemon","title":"Daemon (buckd)","description":"The first time that a Buck2 command is run, Buck2 starts a daemon process for","sidebar":"manualSidebar"},"concepts/glossary":{"id":"concepts/glossary","title":"Glossary of Terms","description":".buckconfig","sidebar":"manualSidebar"},"concepts/target_pattern":{"id":"concepts/target_pattern","title":"Target Pattern","description":"A target pattern is a string that resolves to a set of","sidebar":"manualSidebar"},"concepts/visibility":{"id":"concepts/visibility","title":"Visibility","description":"Visibility determines whether a target can reference","sidebar":"manualSidebar"},"developers/anon_targets":{"id":"developers/anon_targets","title":"BXL and Anonymous Targets","description":"Anonymous targets","sidebar":"manualSidebar"},"developers/architecture/buck1_vs_buck2":{"id":"developers/architecture/buck1_vs_buck2","title":"Buck1 vs Buck2","description":"At a glance","sidebar":"manualSidebar"},"developers/architecture/buck2":{"id":"developers/architecture/buck2","title":"Architectural Model","description":"High-level Overview","sidebar":"manualSidebar"},"developers/architecture/buck2_telemetry":{"id":"developers/architecture/buck2_telemetry","title":"Buck2 Telemetry","description":"\ud83d\udea7\xa0\xa0\xa0THIS PAGE IS UNDER CONSTRUCTION"},"developers/bxl":{"id":"developers/bxl","title":"Why BXL","description":"Buck2 Extension Language (BXL)","sidebar":"manualSidebar"},"developers/bxl_faqs":{"id":"developers/bxl_faqs","title":"FAQs","description":"When is my BXL script cached?","sidebar":"manualSidebar"},"developers/bxl_getting_started":{"id":"developers/bxl_getting_started","title":"Getting Started","description":"Writing a BXL","sidebar":"manualSidebar"},"developers/bxl_how_tos":{"id":"developers/bxl_how_tos","title":"Common How-Tos","description":"Passing in and using CLI args","sidebar":"manualSidebar"},"developers/bxl_telemetry":{"id":"developers/bxl_telemetry","title":"BXL Telemetry","description":"Telemetry","sidebar":"manualSidebar"},"developers/dynamic_output":{"id":"developers/dynamic_output","title":"BXL and Dynamic Outputs","description":"Dynamic output","sidebar":"manualSidebar"},"developers/options":{"id":"developers/options","title":"Buck 2 specific options","description":"Buck 2 introduces some options that don\'t exist in v1 and are accessed in the"},"developers/parity_script":{"id":"developers/parity_script","title":"Parity Testing","description":"This page covers the parity testing/command replay script found in","sidebar":"manualSidebar"},"developers/request_for_comments":{"id":"developers/request_for_comments","title":"Request for Comments","description":"Following are Request for Comments (RFCs) at specific stages of the lifecycle.","sidebar":"manualSidebar"},"developers/starlark/environment":{"id":"developers/starlark/environment","title":"Environments","description":"Some of the information within this page is outdated. However, the explanation of the problem, and thought process behind it, remains useful. The storage of values is similar but implemented using different types.","sidebar":"manualSidebar"},"developers/starlark/gc":{"id":"developers/starlark/gc","title":"A Moving Garbage Collector","description":"This page describes a two-space garbage collector that can deal with cycles.","sidebar":"manualSidebar"},"developers/starlark/heaps":{"id":"developers/starlark/heaps","title":"Heaps and Heap References","description":"Heaps","sidebar":"manualSidebar"},"developers/starlark/spec":{"id":"developers/starlark/spec","title":"Starlark Language Specification","description":"The Starlark language spec can be found in the","sidebar":"manualSidebar"},"developers/starlark/types":{"id":"developers/starlark/types","title":"Starlark Types","description":"The Starlark \'types\' extension is highly experimental and likely to be modified in the future.","sidebar":"manualSidebar"},"developers/starlark/values":{"id":"developers/starlark/values","title":"Value Representation","description":"Some of the information in this page is outdated. However, the explanation of the problem, and thought process behind it, remains useful. Of particular note is that a garbage collected heap is now used for Value.","sidebar":"manualSidebar"},"developers/target_universe":{"id":"developers/target_universe","title":"Target Universe in BXL","description":"BXL cquery and target universe","sidebar":"manualSidebar"},"developers/what-ran":{"id":"developers/what-ran","title":"Finding Commands That Buck2 Ran","description":"Buck2 logs all the commands it runs. So, after you\'ve run a build, you can query","sidebar":"manualSidebar"},"developers/windows_cheat_sheet":{"id":"developers/windows_cheat_sheet","title":"Windows Cheat Sheet","description":"This page contains notes and tips to assist you in understanding the different","sidebar":"manualSidebar"},"getting_started":{"id":"getting_started","title":"Getting Started","description":"Installing Buck2","sidebar":"manualSidebar"},"index":{"id":"index","title":"Introduction","description":"Welcome to Buck2, a large scale, fast, reliable, and extensible build tool","sidebar":"manualSidebar"},"legacy/about/faq":{"id":"legacy/about/faq","title":"FAQ","description":"Q: Why is it called Buck?"},"legacy/about/fast":{"id":"legacy/about/fast","title":"What Makes Buck so Fast?","description":"Buck exploits a number of strategies to reduce build times."},"legacy/about/performance":{"id":"legacy/about/performance","title":"Performance Tuning","description":"Performance Tuning Your Builds"},"legacy/about/troubleshooting":{"id":"legacy/about/troubleshooting","title":"Troubleshooting","description":"If Buck stops working, then there are several things that you can try to do to"},"legacy/basics/cheatsheet":{"id":"legacy/basics/cheatsheet","title":"Buck Cheat Sheet","description":"This section provides example command lines that you can use to obtain"},"legacy/basics/getting-started":{"id":"legacy/basics/getting-started","title":"Getting Started","description":"Note: If you are a member of an organization that is using Buck, please"},"legacy/basics/key-concepts":{"id":"legacy/basics/key-concepts","title":"Key concepts","description":"Buck has a number of fundamental concepts:"},"legacy/basics/tutorials":{"id":"legacy/basics/tutorials","title":"Tutorials","description":"This expanded tutorial shows extended concepts about using Buck to build a"},"legacy/concepts/buck-daemon":{"id":"legacy/concepts/buck-daemon","title":"Buck Daemon (buckd)","description":"The first time that you run a Buck command, Buck starts a daemon process for the"},"legacy/concepts/build-file":{"id":"legacy/concepts/build-file","title":"Build File","description":"A build file is a file, typically named BUCK, that defines one or more"},"legacy/concepts/build-rule":{"id":"legacy/concepts/build-rule","title":"Build Rule","description":"A build rule is a procedure for producing output files from a set of input"},"legacy/concepts/build-target":{"id":"legacy/concepts/build-target","title":"Build Target","description":"A build target is a string that identifies a build rule in your project. Build"},"legacy/concepts/build-target-pattern":{"id":"legacy/concepts/build-target-pattern","title":"Build Target Pattern","description":"A build target pattern is a string that describes a set of one or more"},"legacy/concepts/visibility":{"id":"legacy/concepts/visibility","title":"Visibility","description":"Visibility determines whether a build rule can include a build target in its"},"legacy/files-and-directories/buck-out":{"id":"legacy/files-and-directories/buck-out","title":"buck-out","description":"Buck stores build artifacts in a directory named buck-out in the root of your"},"legacy/files-and-directories/dot-buckconfig":{"id":"legacy/files-and-directories/dot-buckconfig","title":".buckconfig","description":"The root of your project must contain"},"legacy/README":{"id":"legacy/README","title":"buck 1 Documentation Import","description":"This folder contains documentation pulled from the Buck 1 website at"},"rfcs/attr-metadata":{"id":"rfcs/attr-metadata","title":"RFC: labels -> metadata attribute","description":"This RFC proposes to add new builtin per target attribute: metadata, as"},"rfcs/audit_visibility":{"id":"rfcs/audit_visibility","title":"buck2 audit visibility command","description":"Context"},"rfcs/bxl":{"id":"rfcs/bxl","title":"Buck Extension Language (BXL)","description":"Buck2 will allow more complex introspection and interaction with its graphs via"},"rfcs/bxl-analysis":{"id":"rfcs/bxl-analysis","title":"Bxl support for performing analysis on targets","description":"Intro"},"rfcs/configured-alias":{"id":"rfcs/configured-alias","title":"Buck support to implement configured_alias","description":"Intro"},"rfcs/drafts/bxl-actions":{"id":"rfcs/drafts/bxl-actions","title":"Bxl Actions and Build API","description":"Bxl allows integrators to write Starlark snippets that introspect the buck2"},"rfcs/drafts/cfg-modifiers/api":{"id":"rfcs/drafts/cfg-modifiers/api","title":"[RFC] Configuration Modifiers","description":"Why do we need new configuration setup?"},"rfcs/drafts/configuration-at-syntax":{"id":"rfcs/drafts/configuration-at-syntax","title":"@configuration syntax","description":"What"},"rfcs/drafts/digest-kinds":{"id":"rfcs/drafts/digest-kinds","title":"Digest Kinds","description":"Use cases:"},"rfcs/drafts/plugin-deps":{"id":"rfcs/drafts/plugin-deps","title":"plugin-deps","description":"Plugin Deps"},"rfcs/drafts/test-info-v2":{"id":"rfcs/drafts/test-info-v2","title":"RFC: TestInfo v2","description":"A stub RFC for TestInfo v2 to track lessons learned about TestInfo v1. The stack"},"rfcs/implemented/provider-collection-at":{"id":"rfcs/implemented/provider-collection-at","title":"Return error in ProviderCollection[] on undeclared provider","description":"Currently, ctx.attrs.foo[UnknownInfo] returns None if foo is a provider"},"rfcs/package-local-values":{"id":"rfcs/package-local-values","title":"Package-local values","description":"This RFC proposes to extend buck2 Starlark with package-local values."},"rule_authors/alias":{"id":"rule_authors/alias","title":"Alias","description":"The alias rule creates another name by which an existing rule can be referred","sidebar":"manualSidebar"},"rule_authors/anon_targets":{"id":"rule_authors/anon_targets","title":"Anonymous Targets","description":"An anonymous target is defined by the hash of its attributes, rather than its","sidebar":"manualSidebar"},"rule_authors/configuration_transitions":{"id":"rule_authors/configuration_transitions","title":"Configuration Transitions","description":"Configuration transition is a mechanism for changing the configuration when","sidebar":"manualSidebar"},"rule_authors/configurations":{"id":"rule_authors/configurations","title":"Configurations","description":"This page mostly focuses on how configurations and related features are","sidebar":"manualSidebar"},"rule_authors/dep_files":{"id":"rule_authors/dep_files","title":"Dep Files","description":"Dep files allow commands to declare which subset of their inputs were used when","sidebar":"manualSidebar"},"rule_authors/dynamic_dependencies":{"id":"rule_authors/dynamic_dependencies","title":"Dynamic Dependencies","description":"Dynamic dependencies allow a rule to use information that was not available when","sidebar":"manualSidebar"},"rule_authors/incremental_actions":{"id":"rule_authors/incremental_actions","title":"Incremental Actions","description":"It\'s possible to make certain Buck2 actions behave incrementally, that is, to","sidebar":"manualSidebar"},"rule_authors/local_resources":{"id":"rule_authors/local_resources","title":"Local Resources For Tests Execution","description":"Executing a test might require an external resource which is expensive to","sidebar":"manualSidebar"},"rule_authors/optimization":{"id":"rule_authors/optimization","title":"Optimization","description":"Optimization involves the use of techniques for determining and improving the","sidebar":"manualSidebar"},"rule_authors/test_execution":{"id":"rule_authors/test_execution","title":"Test Execution","description":"Test execution in Buck2 is a collaboration with a separate test runner process.","sidebar":"manualSidebar"},"rule_authors/transitive_sets":{"id":"rule_authors/transitive_sets","title":"Transitive Sets","description":"Transitive sets enable the propagation of data up dependency trees in a manner","sidebar":"manualSidebar"},"rule_authors/writing_rules":{"id":"rule_authors/writing_rules","title":"Writing Rules","description":"This page describes how to write rules for Buck2 and explains the flow for","sidebar":"manualSidebar"},"users/advanced/deferred_materialization":{"id":"users/advanced/deferred_materialization","title":"Deferred Materialization","description":"When using Remote Execution, Buck2 can optionally","sidebar":"manualSidebar"},"users/advanced/in_memory_cache":{"id":"users/advanced/in_memory_cache","title":"In Memory Cache","description":"Buck2 can maintain an in-memory cache of actions it executed. This allows","sidebar":"manualSidebar"},"users/advanced/restarter":{"id":"users/advanced/restarter","title":"Restarter","description":"The Restarter can automatically restart Buck2 when Buck2 detects that it hit a","sidebar":"manualSidebar"},"users/build_observability/build_report":{"id":"users/build_observability/build_report","title":"Build Report","description":"The build report is a JSON file that you can ask buck to output which contains","sidebar":"manualSidebar"},"users/build_observability/interactive_console":{"id":"users/build_observability/interactive_console","title":"Buck2 Interactive Console","description":"This will work as long as stdin is a TTY, which will be true most of the time if","sidebar":"manualSidebar"},"users/build_observability/logging":{"id":"users/build_observability/logging","title":"Logging","description":"Buck2 produces detailed event logs for each invocation. They follow a schema","sidebar":"manualSidebar"},"users/commands":{"id":"users/commands","title":"Commands","description":"To get help for a given buck2 subcommand, use buck2 $SUBCOMMAND --help, e.g.","sidebar":"manualSidebar"},"users/faq/common_issues":{"id":"users/faq/common_issues","title":"Common Issues","description":"Why is stdin being swallowed?","sidebar":"manualSidebar"},"users/remote_execution":{"id":"users/remote_execution","title":"Remote Execution","description":"Buck2 can use services that expose","sidebar":"manualSidebar"},"why":{"id":"why","title":"Why Buck2","description":"Buck2 is a build system from Meta. This page answers the questions:","sidebar":"manualSidebar"}}}')}}]);